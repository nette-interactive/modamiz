@using Nop.Core;
@using Nop.Core.Domain.Common;
@using Nop.Core.Infrastructure;
@using SevenSpikes.Nop.Plugins.HelpDesk.Domain.Settings;
@using SevenSpikes.Nop.Plugins.HelpDesk.Models;
@using SevenSpikes.Nop.Plugins.HelpDesk.Extensions;

@model ManageTicketsPublicModel

@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("SevenSpikes.HelpDesk.Public.ManageTicketsLink").Text);

    Html.AddCssFileParts("~/Administration/Content/kendo/2014.1.318/kendo.rtl.min.css");
    Html.AddCssFileParts("~/Administration/Content/kendo/2014.1.318/kendo.default.min.css");
    Html.AddCssFileParts("~/Administration/Content/kendo/2014.1.318/kendo.common.min.css");
    Html.AddCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.HelpDesk/Themes/" + Model.Theme + "/Content/HelpDesk.css");

    var supportRtl = EngineContext.Current.Resolve<IWorkContext>().WorkingLanguage.Rtl;
    if (supportRtl)
    {
        Html.AddCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.HelpDesk/Themes/" + Model.Theme + "/Content/HelpDesk.rtl.css");
    }

    Html.AddScriptParts("~/Plugins/SevenSpikes.Nop.Plugins.HelpDesk/Scripts/HelpDesk.common.js");
    Html.AddScriptParts("~/Plugins/SevenSpikes.Nop.Plugins.HelpDesk/Scripts/HelpDesk.min.js");
    Html.AddScriptParts("~/Plugins/SevenSpikes.Core/Scripts/SevenSpikesExtensions.min.js");
    Html.AddScriptParts(ResourceLocation.Foot, "~/Administration/Scripts/kendo/2014.1.318/kendo.web.min.js");
}

@section left
{
    @Html.Partial("CustomerNavigation", Model.NavigationModel)
}

@{
    var defaultGridPageSize = EngineContext.Current.Resolve<AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<AdminAreaSettings>().GridPageSizes;
    var helpDeskSettings = EngineContext.Current.Resolve<HelpDeskSettings>();
    
    var maxTicketProducts = helpDeskSettings.MaxTicketProducts;

    var minimumProductSearchKeywordLength = helpDeskSettings.MinimumProductSearchKeywordLength;
}

@Html.Hidden("no-results-found", T("SevenSpikes.HelpDesk.Public.Common.NoResultsFound"))
@Html.Hidden("read-allSubjects-url", Html.Raw(Url.Action("GetAllTicketSubjects", "HelpDesk")))
@Html.Hidden("read-allProducts-url", Html.Raw(Url.Action("GetAllProducts", "HelpDesk")))
@Html.Hidden("read-customers-url", Html.Raw(Url.Action("GetAllCustomers", "HelpDesk")))
@Html.Hidden("should-check", false)
@Html.Hidden("grid-id", "managetickets-grid")
@Html.Hidden("max-ticket-products", maxTicketProducts)
@Html.Hidden("minimum-product-search-keyword", minimumProductSearchKeywordLength)

@if (Model.SelectedStatus > 0)
{
    @Html.Hidden("selected-status", Model.SelectedStatus)
}

@if (Model.SelectedCustomerId > 0)
{
    @Html.Hidden("selected-customer-id", Model.SelectedCustomerId)
    @Html.Hidden("selected-customer-term", Model.SelectedCustomerTerm)
}

<script type="text/javascript">
    $(document).ready(function () {
        @if (Model.SelectedCustomerId > 0)
        {
            <text>
                $("#customer-property-field").data('kendoDropDownList').select(1);
                var multiselect = $("#customer-field").data('kendoMultiSelect');
                multiselect.enable(true);
                multiselect.options.minLength = 1;
            </text>
        }

        @Html.Partial("_JSNavigation", "manageTickets")
        
        $("#product-field").data('kendoMultiSelect').tagList.addClass('product-tag-list');

        $('#status-list').data('kendoDropDownList').one("open", function (e) {
            setTimeout(function () {
                e.sender.popup.wrapper.addClass("dropdown-wrapper");
            });
        });

        $('#staff-list').data('kendoDropDownList').one("open", function (e) {
            setTimeout(function () {
                e.sender.popup.wrapper.addClass("dropdown-wrapper");
            });
        });

        $('#customer-property-field').data('kendoDropDownList').one("open", function (e) {
            setTimeout(function () {
                e.sender.popup.wrapper.addClass("dropdown-wrapper");
            });
        });

        $('#departments-list').data('kendoDropDownList').one("open", function (e) {
            setTimeout(function () {
                e.sender.popup.wrapper.addClass("dropdown-wrapper");
            });
        });
    });
</script>

<div class="page account-page ticketing-page manage-tickets-page">
    <div class="page-title">
        <h1 class="pt-text">@T("SevenSpikes.HelpDesk.Public.ManageTicketsTitle")</h1>
    </div>

    <div id="grid-filters" class="grid-filters">
        <ul class="filter-list main-filter-list">
            <li class="filter-item">
                <label class="filter-label">@T("SevenSpikes.HelpDesk.Public.Ticket.TicketId")</label>
                <input id="ticket-id" class="filter-input ticket-id" value="" size="3" />
            </li>
            <li class="filter-item">
                <label class="filter-label">@T("SevenSpikes.HelpDesk.Public.Ticket.TicketStatus")</label>
                <input id="status-list" class="filter-input status-list" value="" />
            </li>
            <li class="filter-item">
                <label class="filter-label">@T("SevenSpikes.HelpDesk.Public.Ticket.Staff")</label>
                <input id="staff-list" class="filter-input staff-list" value="" />
            </li>
            <li class="filter-item">
                <label class="filter-label">@T("SevenSpikes.HelpDesk.Public.Ticket.Department")</label>
                <input id="departments-list" class="filter-input department-list" value="" />
            </li>
            <li class="filter-item search-row">
                <label class="filter-label">@T("SevenSpikes.HelpDesk.Public.ManageTickets.SearchBySubject")</label>
                <input id="subject-field" class="subject-field" value="" />
            </li>
            <li class="filter-item search-row">
                <label class="filter-label">@T("SevenSpikes.HelpDesk.Public.ManageTickets.SearchByProduct")</label>
                <select id="product-field" class="product-field"></select>
            </li>
            <li class="filter-item search-row">
                <label class="filter-label">@T("SevenSpikes.HelpDesk.Public.ManageTickets.SearchByCustomerProperty")</label>
                <input id="customer-property-field" class="property-field" value="" />
            </li>
            <li class="filter-item search-row">
                <label class="filter-label">@T("SevenSpikes.HelpDesk.Public.ManageTickets.SearchByCustomer")</label>
                <select id="customer-field" class="customer-field"></select>
            </li>
            <li class="filter-item">
                <label class="filter-label">@T("SevenSpikes.HelpDesk.Public.ManageTickets.DateFrom")</label>
                <input id="date-from" class="filter-input" value="" readonly="readonly" />
            </li>
            <li class="filter-item">
                <label class="filter-label">@T("SevenSpikes.HelpDesk.Public.ManageTickets.DateTo")</label>
                <input id="date-to" class="filter-input" value="" readonly="readonly" />
            </li>
        </ul>

        @Html.Partial("_FilterableTicketAttributes", Model.TicketAttributes)

        <div id="clear-filters" class="filters-buttons">
            <button type="button" id="clear" class="clear-filters k-button">@T("SevenSpikes.HelpDesk.Public.ManageTickets.ClearFilters")</button>
        </div>
    </div>

    <div id="managetickets-grid" class="tickets-table-panel"></div>

    <script>
        $(document).ready(function () {

            $(document).on("click", ".k-grid-edit", function() {

                $('#managetickets-grid').data('kendoGrid').tbody.find('.k-dropdown select').data('kendoDropDownList').one("open", function (e) {
                    setTimeout(function () {
                        e.sender.popup.wrapper.addClass("dropdown-wrapper");
                    });
                }).list.addClass("grid-owners-list");

                $(".k-grid-update, .k-grid-cancel").css({"margin-right": "4px", "min-width": "16px", "font-size": "0"}).removeClass("k-button-icontext").on("click", function(){
                    $('#managetickets-grid colgroup col:last-child').css('width', '50px');
                });

                $('#managetickets-grid colgroup col:last-child').css('width', '85px');
            });

            $("#managetickets-grid").kendoGrid({
                dataSource: {
                    type: "json",
                    transport: {
                        read: {
                            url: "@Html.Raw(Url.Action("ManageTicketsList", "HelpDesk", new { status = Model.SelectedStatus, customerId = Model.SelectedCustomerId }))",
                            type: "POST",
                            dataType: "json",
                            contentType: "application/json"
                        },
                        update: {
                            url: "@Html.Raw(Url.Action("CheckIfTicketIsAssigned", "HelpDesk"))",
                            type: "POST",
                            dataType: "json",
                            complete: function(e) {

                                var assignTicket = function(response) {

                                    $.ajax({
                                        cache: false,
                                        type: 'POST',
                                        data: {
                                            'ticketId': response.TicketId,
                                            'newTicketOwnerId': response.NewTicketOwnerId
                                        },
                                        url: "@Html.Raw(Url.Action("ManageTicketsUpdate", "HelpDesk"))"
                                    }).always(function() {

                                        $("#managetickets-grid").data("kendoGrid").dataSource.read();
                                    });
                                };

                                if (e.responseJSON.IsTicketAssigned) {

                                    createKendoConfirm('assign-confirmation', function() {

                                        assignTicket(e.responseJSON);
                                    }, function() {

                                        $("#managetickets-grid").data("kendoGrid").dataSource.read();
                                    });
                                } else {

                                    assignTicket(e.responseJSON);
                                }
                            }
                        },
                        parameterMap: function(data, operation) {
                            if (operation === "update") {

                                var model = {
                                    ticketId: data.Id,
                                    newTicketOwnerId: data.TicketOwnerId
                                };

                                return model;
                            }

                            // Only the read operation should stringify the data.
                            return JSON.stringify(data);
                        }
                    },
                    schema: {
                        data: "Data",
                        total: "Total",
                        errors: "Errors",
                        model: {
                            id: "Id",
                            fields: {
                                Id: { editable: false, type: "number" },
                                Subject: { editable: false, type: "string"},
                                CreatedOnUtc: { editable: false, type: "date" },
                                LastCustomerAnswerUtc: { editable: false, type: "date" },
                                LastStaffAnswerUtc: { editable: false, type: "date" },
                                TicketStatus: { editable: false, type: "string"},
                                TicketDueIn: { editable: false, type: "string" }
                            }
                        }
                    },

                    error: function (e) {
                        display_kendoui_grid_error(e);

                        this.cancelChanges();
                    },
                    pageSize: "@(defaultGridPageSize)",
                    serverPaging: true,
                    serverFiltering: true,
                    serverSorting: true
                },
                pageable: {
                    refresh: true,
                    pageSizes: [@(gridPageSizes)]
                },
                editable: {
                    confirmation: false,
                    mode: "inline"
                },
                filterable: true,
                sortable: true,
                scrollable: false,
                detailTemplate: kendo.template($("#ticket-information").html()),
                detailInit: detailInit,
                dataBound: onDataBound,
                cancel: function(e) {
                    $("#managetickets-grid").data("kendoGrid").refresh();
                },
                columns: [{
                    field: "Id",
                    title: "@T("SevenSpikes.HelpDesk.Public.ManageTickets.Ticket")",
                    width: 50,
                    template: "<div style='text-align:center'>\\##= Id #</div>",
                    headerAttributes: {
                        style: "text-align: center;"
                    },
                    filterable: false
                }, {
                    field: "Subject",
                    title: "@T("SevenSpikes.HelpDesk.Public.Ticket.Subject")",
                    width: 170,
                    filterable: false
                }, {
                    field: "TicketStatus",
                    template: "#= TicketStatusName #",
                    title: "@T("SevenSpikes.HelpDesk.Public.Ticket.TicketStatus")",
                    width: 150,
                    filterable: false
                }, {
                    field: "TicketOwnerId",
                    title: "@T("SevenSpikes.HelpDesk.Public.Ticket.TicketOwner")",
                    values: localDatabase().allStaff,
                    width: 130,
                    filterable: false
                }, {
                    field: "TicketDueIn",
                    template: "#= isNaN(TicketDueIn) || TicketDueIn.length == 0 ? TicketDueIn : TicketDueIn + ' h' #",
                    title: "@T("SevenSpikes.HelpDesk.Public.Ticket.TicketDueIn")",
                    width: 60,
                    attributes: { "class": "ticketDueIn" },
                    filterable: false,
                    sortable: false
                }, {
                    title: "@T("Admin.Common.View")",
                    template: kendo.template($("#commands-template").html()),
                    width: 50,
                    filterable: false,
                    sortable: false
                }, {
                    command: [{
                        name: "edit",
                        template: "<a class='k-button k-grid-edit' href='' style='min-width: 16px;'><span class='k-icon k-edit'></span></a>"
                    }],
                    title: "@T("SevenSpikes.HelpDesk.Public.ManageTickets.Assign")",
                    width: 50
                }]
            });

            $('#managetickets-grid').data('kendoGrid').table.css('table-layout', 'fixed');

            $('#managetickets-grid').data('kendoGrid').wrapper.find('.k-pager-sizes select').data('kendoDropDownList').one("open", function (e) {
                setTimeout(function () {
                    e.sender.popup.wrapper.addClass("dropdown-wrapper");
                });
            }).list.addClass("grid-totalPages-list");

        });

        function onDataBound() {
            var grid = $("#managetickets-grid").data("kendoGrid");

            grid.tbody.find('>tr').each(function () {
                var dataItem = grid.dataItem(this);

                if (dataItem.TicketDueIn != null && dataItem.TicketDueIn.length > 0) {
                    var className = '';

                    if(isNaN(dataItem.TicketDueIn)) {
                        className = "overdue";
                    } else {
                        var hoursToExpire = parseInt(dataItem.TicketDueIn);

                        if(hoursToExpire < 12) {
                            className = "almost-overdue";
                        } else {
                            className = "not-overdue";
                        }
                    }

                    $(this).children(".ticketDueIn").addClass(className);
                }
            });
        }

        function detailInit(e) {
            var detailRow = e.detailRow;

            detailRow.find(".tabstrip").kendoTabStrip({
                animation: {
                    open: { effects: "fadeIn" }
                }
            });
        }

        function localDatabase() {
            var allStaff = @Html.ToLocalDatabase(Model.AvailableStaff);
            var allDepartments = @Html.ToLocalDatabase(Model.AvailableDepartments);
            var allStatus = @Html.ToLocalDatabase(Model.AvailableStatus);
            var allCustomerProperties = @Html.ToLocalDatabase(Model.AvailableCustomerProperties);

            return {
                allStaff: allStaff,
                allDepartments: allDepartments,
                allStatus: allStatus,
                allCustomerProperties: allCustomerProperties
            };
        }
    </script>

    <script type="text/x-kendo-template" id="assign-confirmation">
        <p class="message">This ticket has already been assigned. Are you sure you want to continue?</p>

        <button class="confirm">Yes</button>
        <button class="cancel">No</button>
    </script>

    <script type="text/x-kendo-template" id="ticket-information">
        <div class="ticket-info-panel tabstrip">
            <ul class="tabs-list">
                <li class="tab-item k-state-active">
                    <span class="tab-text">@T("SevenSpikes.HelpDesk.Public.ManageTickets.TicketInfo")</span>
                </li>
            </ul>
            <div class="tab-box-wrapper">
                <ul id="ticket-details-template" class="tab-box">
                    <li class="box-row">
                        <label class="row-label">@T("SevenSpikes.HelpDesk.Public.Ticket.TicketId"):</label>
                        <span class="row-text">#= Id #</span>
                    </li>
                    <li class="box-row">
                        <label class="row-label">@T("SevenSpikes.HelpDesk.Public.Ticket.Product"):</label>
                        <span class="row-text">#= AllProducts #</span>
                    </li>
                    <li class="box-row">
                        <label class="row-label">@T("SevenSpikes.HelpDesk.Public.Ticket.Department"):</label>
                        <span class="row-text">#= TicketDepartmentName #</span>
                    </li>
                    <li class="box-row">
                        <label class="row-label">@T("SevenSpikes.HelpDesk.Public.Ticket.Customer"):</label>
                        <span><a class="row-text" href="@(Html.Raw(Url.Action("ManageTickets", "HelpDesk")))?customerId=#= CustomerId #">#= CustomerName # ( Id: #= CustomerId # )</a></span>
                    </li>

                    # if (AssignedBy !== 0) { #
                    <li class="box-row">
                        <label class="row-label">@T("SevenSpikes.HelpDesk.Public.Ticket.AssignedBy"):</label>
                        <span class="row-text">#= AssignedByName # ( Id: #= AssignedBy # )</span>
                    </li>
                    # } #

                    # if (TicketStatus == 10 || TicketStatus == 15) { #
                    # var closedBy = ""; #

                    # if (TicketStatus == 10) { #
                    # closedBy += ClosedByName #
                    # closedBy += (ClosedBy != 0) ? " ( Id: " + ClosedBy + " )" : "" #
                    # } else { #
                    # closedBy = "@T("SevenSpikes.HelpDesk.Public.Ticket.ClosedBy.System")" #
                    # } #

                    <li class="box-row">
                        <label class="row-label">@T("SevenSpikes.HelpDesk.Public.Ticket.ClosedBy"):</label>
                        <span class="row-text">#= closedBy #</span>
                    </li>
                    <li class="box-row">
                        <label class="row-label">@T("SevenSpikes.HelpDesk.Public.Ticket.ClosedOnUtc"):</label>
                        <span class="row-text">#= prettyDate(kendo.toString(kendo.parseDate(ClosedOnUtc), "u")) #</span>
                    </li>
                    # } #

                    <li class="box-row">
                        <label class="row-label">@T("SevenSpikes.HelpDesk.Public.Ticket.CreatedOnUtc"):</label>
                        <span class="row-text">#= prettyDate(kendo.toString(kendo.parseDate(CreatedOnUtc), "u")) #</span>
                    </li>
                    <li class="box-row">
                        <label class="row-label">@T("SevenSpikes.HelpDesk.Public.Ticket.LastCustomerAnswerUtc"):</label>
                        <span class="row-text">#= prettyDate(kendo.toString(kendo.parseDate(LastCustomerAnswerUtc), "u")) #</span>
                    </li>
                    <li class="box-row">
                        <label class="row-label">@T("SevenSpikes.HelpDesk.Public.Ticket.LastStaffAnswerUtc"):</label>
                        <span class="row-text">#= prettyDate(kendo.toString(kendo.parseDate(LastStaffAnswerUtc), "u")) #</span>
                    </li>
                </ul>
            </div>
        </div>
    </script>

    <script id="commands-template" type="text/x-kendo-template">
        <a class="view-ticket k-button" href="ViewTicket/#: Id#" title="@T("Admin.Common.View")">@T("Admin.Common.View")</a>
    </script>

</div>