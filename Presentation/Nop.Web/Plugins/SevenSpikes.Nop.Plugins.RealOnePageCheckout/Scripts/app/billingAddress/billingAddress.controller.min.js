"use strict";function BillingAddressController(n,t,i,r){function f(){if(angular.isDefined(u.config)){var n=!u.config.disableBillingAddressCheckoutStep;u.requiredFields={firstName:n,lastName:n,email:n,company:n&&u.billingData.settings.companyEnabled!==!1&&u.billingData.settings.companyRequired,country:n&&u.billingData.settings.countryEnabled!==!1,address1:n&&u.billingData.settings.streetAddressEnabled!==!1&&u.billingData.settings.streetAddressRequired,address2:n&&u.billingData.settings.streetAddress2Enabled!==!1&&u.billingData.settings.streetAddress2Required,zipPostalCode:n&&u.billingData.settings.zipPostalCodeEnabled!==!1&&u.billingData.settings.zipPostalCodeRequired,phoneNumber:n&&u.billingData.settings.phoneEnabled!==!1&&u.billingData.settings.phoneRequired,faxNumber:n&&u.billingData.settings.faxEnabled!==!1&&u.billingData.settings.faxRequired}}}function e(){var r=!0;t.$watch("{address: vm.billingData.selectedBillingAddress, shipToSameAddress: vm.shipToSameAddress}",function(n,t){n&&t&&!r?i.set(n):r=!1},!0);$(".billing-address .choose-address select").change(function(){n.$broadcast("addressChanged",{panel:"billing",shipToSameAddress:u.shipToSameAddress})})}var u=this;u.billingData={};u.configData={};u.configData.shipToSameAddressDisabled=!1;u.shipToSameAddress=!1;u.addressAttributeChanged=function(n,t){r.syncAttributeWithModel(t,n)};n.$on("checkoutDataLoaded",function(n,t){i.init(t);var o=i.get();angular.copy(o,u.billingData);u.config=t.configuration;u.configData.shipToSameAddressDisabled=!u.config.hasProductsRequiringShipping||u.config.pickUpInStoreOnly;u.shipToSameAddress=u.config.shipToSameAddress;!angular.isDefined(u.requiredFields)&&angular.isDefined(u.billingData.settings)&&f();u.billingData.selectedBillingAddress&&u.billingData.selectedBillingAddress.customAddressAttributes&&u.billingData.selectedBillingAddress.customAddressAttributes.length>0&&!angular.isDefined(u.modelsData)&&(u.modelsData={},r.prepareDefaultSelectedValues(u.billingData.selectedBillingAddress,u.modelsData));e()});n.$on("refresh",function(n,t){if(!(t.controller==undefined||t.controller=="BillingAddressController"))return!1;var e=i.get();angular.copy(e,u.billingData);!angular.isDefined(u.requiredFields)&&angular.isDefined(u.billingData.settings)&&f();u.billingData.selectedBillingAddress&&u.billingData.selectedBillingAddress.customAddressAttributes&&u.billingData.selectedBillingAddress.customAddressAttributes.length>0&&!angular.isDefined(u.modelsData)&&(u.modelsData={},r.prepareDefaultSelectedValues(u.billingData.selectedBillingAddress,u.modelsData));r.hideOverlay(".billing-address-loader")});n.$on("togglePanel",function(n,t){angular.isDefined(t.hasProductsRequiringShipping)&&(u.configData.shipToSameAddressDisabled=!t.hasProductsRequiringShipping);angular.isDefined(t.pickUpInStore)&&(u.configData.shipToSameAddressDisabled=t.pickUpInStore)});n.$on("setBillingAddressOverlay",function(){r.showOverlay(".billing-address-loader")});n.$on("prepareDefaultSelectedValuesForCustomAddressAttributes",function(n,i){i.panel=="billing"&&setTimeout(function(){t.$apply(function(){r.prepareDefaultSelectedValues(u.billingData.selectedBillingAddress,u.modelsData)})})})}angular.module("realOnePageCheckout.billingAddress").controller("BillingAddressController",BillingAddressController);BillingAddressController.$inject=["$rootScope","$scope","billingAddressContext","objectUtility"];