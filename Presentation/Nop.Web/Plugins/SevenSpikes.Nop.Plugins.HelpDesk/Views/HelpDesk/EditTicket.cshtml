@using Nop.Core;
@using SevenSpikes.Nop.Plugins.HelpDesk.Domain.Settings;
@using SevenSpikes.Nop.Plugins.HelpDesk.Models;
@using Nop.Core.Infrastructure;

@model EditTicketPublicModel

@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("SevenSpikes.HelpDesk.Public.EditTicket.Edit").Text + "#" + Model.TicketId);

    Html.AddCssFileParts("~/Administration/Content/kendo/2014.1.318/kendo.rtl.min.css");
    Html.AddCssFileParts("~/Administration/Content/kendo/2014.1.318/kendo.default.min.css");
    Html.AddCssFileParts("~/Administration/Content/kendo/2014.1.318/kendo.common.min.css");
    Html.AddCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.HelpDesk/Themes/" + Model.Theme + "/Content/HelpDesk.css");

    var supportRtl = EngineContext.Current.Resolve<IWorkContext>().WorkingLanguage.Rtl;
    if (supportRtl)
    {
        Html.AddCssFileParts("~/Plugins/SevenSpikes.Nop.Plugins.HelpDesk/Themes/" + Model.Theme + "/Content/HelpDesk.rtl.css");
    }

    Html.AddScriptParts(ResourceLocation.Foot, "~/Administration/Scripts/kendo/2014.1.318/kendo.web.min.js");

    var helpDeskSettings = EngineContext.Current.Resolve<HelpDeskSettings>();
}

@section left
{
    @Html.Partial("CustomerNavigation", Model.NavigationModel)
}

<script type="text/javascript">
    $(document).ready(function () {
        @Html.Partial("_JSNavigation", "manageTickets")

        @if(ViewBag.IsAdmin)
        {
            <text>
                $("#@(Html.FieldIdFor(model => model.TicketDepartmentId))").kendoDropDownList();

                $("#@(Html.FieldIdFor(model => model.TicketOwnerId))").kendoDropDownList({
                    autoBind: false,
                    cascadeFrom: "@(Html.FieldIdFor(model => model.TicketDepartmentId))",
                    dataTextField: "CustomerName",
                    dataValueField: "CustomerId",
                    dataSource: {
                        type: "json",
                        serverFiltering: true,
                        transport: {
                            read: {
                                url: "@(Url.Action("GetAllStaffByDepartmentId", "HelpDesk"))",
                                type: "POST",
                                dataType: "json",
                                contentType: "application/json"
                            },
                            parameterMap: function (data, operation) {
                                if (operation != "read") {
                                    return data;
                                } else {
                                    //for some reasons only such "Filter" data be parsed
                                    return JSON.stringify(data);
                                }
                            }
                        }
                    },
                    change: function(e) {
                        this._savedOld = this.value();
                    },
                    dataBound: function (e) {
                        var previous = this._savedOld;

                        if (previous) {

                            for (var i = 0; i < e.sender.dataSource.data().length; i++) {
                                var current = e.sender.dataSource.data()[i];

                                if (current.CustomerId == previous) {

                                    this.value(previous);

                                    break;
                                }
                            }
                        }

                        this._savedOld = this.value();
                    }
                });

                $("#@Html.FieldIdFor(model => model.TicketDepartmentId)").data('kendoDropDownList')
                .one("open", function (e) {
                    setTimeout(function () {
                        e.sender.popup.wrapper.addClass("dropdown-wrapper departments-dropdown");
                    });
                });

                $("#@Html.FieldIdFor(model => model.TicketOwnerId)").data('kendoDropDownList')
                .one("open", function (e) {
                    setTimeout(function () {
                        e.sender.popup.wrapper.addClass("dropdown-wrapper owners-dropdown");
                    });
                });
            </text>
        }
    });

    // http://stackoverflow.com/questions/8466643/jquery-validate-enable-validation-for-hidden-fields/8565769#8565769
    // enable the validation of the hidden fields( kendo fields )
    $.validator.setDefaults({
        ignore: [],
    });
</script>

<div class="page account-page ticketing-page edit-ticket-page">
    <div class="page-title">
        <h1 class="pt-text">@T("Account.MyAccount") - @T("SevenSpikes.HelpDesk.Public.EditTicketLink")</h1>
    </div>

    <div class="page-body" id="addNewTicket">
        @using (Html.BeginForm("EditTicket", "HelpDesk", FormMethod.Post, new { id = "editTicketForm" }))
        {
            @Html.Hidden("ticketId", Model.TicketId)

            <div class="fieldset">
                <div class="title">
                    <strong class="title-text">@T("SevenSpikes.HelpDesk.Public.NewTicketLink.GeneralInformation")</strong>
                </div>
                <div class="form-fields">
                    <div class="inputs">
                        @Html.LabelFor(model => model.TicketProducts, new { }, ":")
                        @Html.EditorFor(model => model.TicketProducts)

                        @if (helpDeskSettings.IsProductFieldRequired)
                        {
                            @Html.RequiredHint()
                            @Html.ValidationMessageFor(model => model.TicketProducts)
                        }
                    </div>

                    @if (ViewBag.IsAdmin)
                    {
                        <div class="inputs">
                            @Html.LabelFor(model => model.TicketDepartmentId, new { }, ":")
                            @Html.DropDownListFor(model => model.TicketDepartmentId, Model.AvailableDepartments)
                            @Html.RequiredHint()
                            @Html.ValidationMessageFor(model => model.TicketDepartmentId)
                        </div>
                        <div class="inputs">
                            @Html.LabelFor(model => model.TicketOwnerId, new { }, ":")
                            @Html.DropDownListFor(model => model.TicketOwnerId, Model.AvailableStaff)
                            @Html.RequiredHint()
                            @Html.ValidationMessageFor(model => model.TicketOwnerId)
                        </div>
                    }
                </div>
            </div>

            if (Model.TicketAttributes.Count > 0)
            {
                <div class="fieldset">
                    <div class="title">
                        <strong class="title-text">@T("SevenSpikes.HelpDesk.Public.NewTicketLink.AdditionalInformation")</strong>
                    </div>
                    <div class="form-fields">
                        @Html.Partial("_TicketAttributes", Model.TicketAttributes)
                    </div>
                </div>
            }

            <div class="buttons">
                <button type="submit" class="save-ticket k-button">@T("SevenSpikes.HelpDesk.Public.EditTicket.Save")</button>

                <a href="@Html.Raw(Url.Action("ViewTicket", "HelpDesk", new { id = Model.TicketId }))" class="return-to-ticket k-button">
                    @T("SevenSpikes.HelpDesk.Public.ViewTicket.Notes.ReturnToTheTicket")
                </a>
            </div>
        }
    </div>
</div>