"use strict";function shippingAddressContext(n,t,i,r,u,f,e){function l(n){return r.updateCountry(n,"Shipping").then(function(){n=parseInt(n);var i={};return o.settings.stateProvinceEnabled&&(i.states=r.getStatesByCountryId(n)),t.all(i).then(function(n){if(o.settings.stateProvinceEnabled){o.states=n.states.data;var t,i=o.selectedShippingAddress.stateProvince.value,r=s.getLastState().selectedShippingAddress.stateProvince.value;i!=r?t=i:(t=0,o.selectedShippingAddress.stateProvince={});h("StateProvinceId",t);e(function(){$(document).trigger({type:"addressStatesUpdated",statesDropdownId:"#shippingStateProvince"})},100)}return s.setState(o),n},function(n){return o=s.getLastState(),t.reject(n)})},function(n){return o=s.getLastState(),t.reject(n)})}function h(n,i){return r.updateAddress(n,i,"shipping").then(function(n){return n},function(n){return t.reject(n)})}function a(n){var i,t,r,f;if(o=n.shippingAddresses,o.selectedShippingAddress={},o.selectedShippingAddress.country={},o.selectedShippingAddress.stateProvince={},o.addresses&&o.addresses.length>0){for(i=0;i<o.addresses.length;i++)o.addresses[i].availableCountries=angular.copy(o.availableCountries),o.addresses[i].availableStates=angular.copy(o.availableStatesForNoCountry);t=o.shippingAddress;angular.isDefined(t)?(t.availableCountries=angular.copy(o.availableCountries),r=$.grep(o.addresses,function(n){return n.id===t.id}),r.length>0&&(f=r[0],f.availableStates=angular.copy(t.availableStates)),o.selectedShippingAddress=t):(t=angular.copy(o.addresses[0]),o.settings.countryEnabled&&n.configuration.defaultShippingCountryId&&(o.selectedShippingAddress.country.value=n.configuration.defaultShippingCountryId.toString()),t.availableStates=o.availableStates);o.settings.countryEnabled&&(o.countries=t.availableCountries);o.settings.stateProvinceEnabled&&(o.states=t.availableStates);o.selectedShippingAddress.customAddressAttributes=t.customAddressAttributes;u.equalize(t,o.addresses)}s.setState(o)}function v(){return o}function y(i){var r,a,f,v,e,c,y;if(o&&o.selectedShippingAddress){for(a={},f=angular.copy(o.selectedShippingAddress),angular.copy(i,o.selectedShippingAddress),v=0;v<o.persistedShippingAddressFields.length;v++){if(e=o.persistedShippingAddressFields[v],e==="CountryId"&&i.country.value!=f.country.value){c=i.country.value;c&&c.length!=0||(o.states=angular.copy(i.availableStates),c=0);a.newCountryId=c;r||(r={});r.updateCountry=l(c);continue}if(e==="StateProvinceId"&&i.stateProvince.value!=f.stateProvince.value){a.newStateProvinceId=i.stateProvince.value;r||(r={});r.updateStateProvince=h("StateProvinceId",i.stateProvince.value);continue}y=u.uncapitalizeFirstLetter(o.persistedShippingAddressFields[v]);i[y]!=f[y]&&(a["new"+e]=i[y],r||(r={}),r["update"+e]=h(e,i[y]))}angular.isDefined(r)&&n.$broadcast("shippingContextChanging",a);t.all(r).then(function(){for(var h,c,t={},e=0;e<o.persistedShippingAddressFields.length;e++){if(h=o.persistedShippingAddressFields[e],h==="CountryId"&&i.country.value!=f.country.value){t.newCountryId=i.country.value;continue}if(h==="StateProvinceId"&&i.stateProvince.value!=f.stateProvince.value){t.newStateProvinceId=i.stateProvince.value;continue}c=u.uncapitalizeFirstLetter(o.persistedShippingAddressFields[e]);i[c]!=f[c]&&(t["new"+h]=i[c])}angular.isDefined(r)&&n.$broadcast("shippingContextChanged",t);s.setState(o)},function(){o=s.getLastState();n.$broadcast("shippingContextChanged")})}}var c={init:a,get:v,set:y},o,s=f.instance();return c}angular.module("realOnePageCheckout.shippingAddress").factory("shippingAddressContext",shippingAddressContext);shippingAddressContext.$inject=["$rootScope","$q","api","shippingAddressService","objectUtility","stateHolder","$timeout"];