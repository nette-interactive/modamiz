"use strict";function ShippingMethodsController(n,t,i,r){function o(){var n=!0;t.$watch("vm.shippingData.selectedShippingMethod",function(t,r){t&&r&&!n?i.set(t):n=!1},!0)}var u=this,f,e;u.shippingData={};u.configData={};u.configData.isVisible=!0;f=!1;e=!1;n.$on("checkoutDataLoaded",function(n,t){i.init(t.shippingMethods);var r=i.get();angular.copy(r,u.shippingData);angular.isDefined(t.configuration.hasProductsRequiringShipping)&&(f=t.configuration.hasProductsRequiringShipping);angular.isDefined(t.configuration.pickUpInStoreOnly)&&(e=t.configuration.pickUpInStoreOnly);u.configData.isVisible=f&&!e;o()});n.$on("togglePanel",function(n,t){angular.isDefined(t.hasProductsRequiringShipping)&&(f=t.hasProductsRequiringShipping);angular.isDefined(t.pickUpInStore)&&(e=t.pickUpInStore);u.configData.isVisible=!e&&f});n.$on("refresh",function(n,t){if(!(t.controller==undefined||t.controller=="ShippingMethodsController"))return!1;var f=i.get();angular.copy(f,u.shippingData);r.hideOverlay(".shipping-methods-loader")});n.$on("setShippingMethodsOverlay",function(){r.showOverlay(".shipping-methods-loader")});n.$on("resetShippingMethodsData",function(n,t){!e&&f&&i.resetShippingMethodsData(t)});u.stringFormat=r.stringFormat;u.renderShippingDescription=r.trustAsHtml}angular.module("realOnePageCheckout.shippingMethods").controller("ShippingMethodsController",ShippingMethodsController);ShippingMethodsController.$inject=["$rootScope","$scope","shippingMethodsContext","objectUtility"];