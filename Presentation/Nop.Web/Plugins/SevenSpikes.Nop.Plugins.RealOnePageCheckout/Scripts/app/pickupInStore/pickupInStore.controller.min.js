"use strict";function PickupInStoreController(n,t,i){function s(){var n=!0;t.$watch("vm.pickupInStoreData.pickupInStore",function(t){typeof t!="boolean"||n?n=!1:(u=t,i.set(u,r.selectedPickupPoint.Id+"___"+r.selectedPickupPoint.ProviderSystemName))},!0)}function o(){var n=r.pickUpInStoreModel;n&&(r.configData.pickupInStoreIsVisible=n.allowPickUpInStore&&n.pickupPoints.length>0&&f&&!e)}var r=this;r.pickupInStoreData={};r.configData={};r.configData.pickupInStoreIsVisible=!0;r.configData.pickupInStoreCheckboxDisabled=!1;r.pickupInStoreModel={};r.selectedPickupPoint={};var u=!1,f=!1,e=!1;n.$on("refresh",function(n,t){if(!(t.controller==undefined||t.controller=="PickupInStoreController"))return!1;var u=i.get();angular.copy(u,r.pickupInStoreData)});r.pickUpPointChanged=function(n){if(u&&n){var t=r.selectedPickupPoint.Id+"___"+r.selectedPickupPoint.ProviderSystemName;i.set(u,t)}};n.$on("pickupPointMarkerClicked",function(n,t){r.selectedPickupPoint=t.pickUpPoint;r.pickUpPointChanged()});n.$on("checkoutDataLoaded",function(n,h){i.init(h);angular.isDefined(h.configuration.hasProductsRequiringShipping)&&(f=h.configuration.hasProductsRequiringShipping);angular.isDefined(h.configuration.shipToSameAddress)&&(e=h.configuration.shipToSameAddress);r.pickupInStoreData.pickupInStore=h.configuration.pickUpInStoreOnly;u=h.configuration.pickUpInStoreOnly;t.$evalAsync(function(){r.config=h.configuration;r.config.pickUpInStoreModel&&(r.pickUpInStoreModel=JSON.parse(r.config.pickUpInStoreModel),r.selectedPickupPoint=r.pickUpInStoreModel.pickupPoints[0]);o()});s()});n.$on("togglePanel",function(n,t){angular.isDefined(t.hasProductsRequiringShipping)&&(f=t.hasProductsRequiringShipping);t&&angular.isDefined(t.shipToSameAddress)&&(e=t.shipToSameAddress);o()})}angular.module("realOnePageCheckout.pickupInStore").controller("PickupInStoreController",PickupInStoreController);PickupInStoreController.$inject=["$rootScope","$scope","pickupInStoreContext"];